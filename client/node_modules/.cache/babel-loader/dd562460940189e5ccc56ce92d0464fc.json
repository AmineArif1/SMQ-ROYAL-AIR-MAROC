{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\n'use strict';\n\nconst fs = require('fs');\n\nconst crypto = require('crypto');\n\nconst {\n  EventEmitter\n} = require('events');\n\nclass PersistentFile extends EventEmitter {\n  constructor(_ref) {\n    let {\n      filepath,\n      newFilename,\n      originalFilename,\n      mimetype,\n      hashAlgorithm\n    } = _ref;\n    super();\n    this.lastModifiedDate = null;\n    Object.assign(this, {\n      filepath,\n      newFilename,\n      originalFilename,\n      mimetype,\n      hashAlgorithm\n    });\n    this.size = 0;\n    this._writeStream = null;\n\n    if (typeof this.hashAlgorithm === 'string') {\n      this.hash = crypto.createHash(this.hashAlgorithm);\n    } else {\n      this.hash = null;\n    }\n  }\n\n  open() {\n    this._writeStream = new fs.WriteStream(this.filepath);\n\n    this._writeStream.on('error', err => {\n      this.emit('error', err);\n    });\n  }\n\n  toJSON() {\n    const json = {\n      size: this.size,\n      filepath: this.filepath,\n      newFilename: this.newFilename,\n      mimetype: this.mimetype,\n      mtime: this.lastModifiedDate,\n      length: this.length,\n      originalFilename: this.originalFilename\n    };\n\n    if (this.hash && this.hash !== '') {\n      json.hash = this.hash;\n    }\n\n    return json;\n  }\n\n  toString() {\n    return `PersistentFile: ${this._file.newFilename}, Original: ${this._file.originalFilename}, Path: ${this._file.filepath}`;\n  }\n\n  write(buffer, cb) {\n    if (this.hash) {\n      this.hash.update(buffer);\n    }\n\n    if (this._writeStream.closed) {\n      cb();\n      return;\n    }\n\n    this._writeStream.write(buffer, () => {\n      this.lastModifiedDate = new Date();\n      this.size += buffer.length;\n      this.emit('progress', this.size);\n      cb();\n    });\n  }\n\n  end(cb) {\n    if (this.hash) {\n      this.hash = this.hash.digest('hex');\n    }\n\n    this._writeStream.end(() => {\n      this.emit('end');\n      cb();\n    });\n  }\n\n  destroy() {\n    this._writeStream.destroy();\n\n    fs.unlink(this.filepath, () => {});\n  }\n\n}\n\nmodule.exports = PersistentFile;","map":{"version":3,"names":["fs","require","crypto","EventEmitter","PersistentFile","constructor","filepath","newFilename","originalFilename","mimetype","hashAlgorithm","lastModifiedDate","Object","assign","size","_writeStream","hash","createHash","open","WriteStream","on","err","emit","toJSON","json","mtime","length","toString","_file","write","buffer","cb","update","closed","Date","end","digest","destroy","unlink","module","exports"],"sources":["C:/Users/killua/local/pc/Bureau/SMQ-ROYAL-AIR-MAROC/client/node_modules/formidable/src/PersistentFile.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst fs = require('fs');\nconst crypto = require('crypto');\nconst { EventEmitter } = require('events');\n\nclass PersistentFile extends EventEmitter {\n  constructor({ filepath, newFilename, originalFilename, mimetype, hashAlgorithm }) {\n    super();\n\n    this.lastModifiedDate = null;\n    Object.assign(this, { filepath, newFilename, originalFilename, mimetype, hashAlgorithm });\n\n    this.size = 0;\n    this._writeStream = null;\n\n    if (typeof this.hashAlgorithm === 'string') {\n      this.hash = crypto.createHash(this.hashAlgorithm);\n    } else {\n      this.hash = null;\n    }\n  }\n\n  open() {\n    this._writeStream = new fs.WriteStream(this.filepath);\n    this._writeStream.on('error', (err) => {\n      this.emit('error', err);\n    });\n  }\n\n  toJSON() {\n    const json = {\n      size: this.size,\n      filepath: this.filepath,\n      newFilename: this.newFilename,\n      mimetype: this.mimetype,\n      mtime: this.lastModifiedDate,\n      length: this.length,\n      originalFilename: this.originalFilename,\n    };\n    if (this.hash && this.hash !== '') {\n      json.hash = this.hash;\n    }\n    return json;\n  }\n\n  toString() {\n    return `PersistentFile: ${this._file.newFilename}, Original: ${this._file.originalFilename}, Path: ${this._file.filepath}`;\n  }\n\n  write(buffer, cb) {\n    if (this.hash) {\n      this.hash.update(buffer);\n    }\n\n    if (this._writeStream.closed) {\n      cb();\n      return;\n    }\n\n    this._writeStream.write(buffer, () => {\n      this.lastModifiedDate = new Date();\n      this.size += buffer.length;\n      this.emit('progress', this.size);\n      cb();\n    });\n  }\n\n  end(cb) {\n    if (this.hash) {\n      this.hash = this.hash.digest('hex');\n    }\n    this._writeStream.end(() => {\n      this.emit('end');\n      cb();\n    });\n  }\n\n  destroy() {\n    this._writeStream.destroy();\n    fs.unlink(this.filepath, () => {});\n  }\n}\n\nmodule.exports = PersistentFile;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}