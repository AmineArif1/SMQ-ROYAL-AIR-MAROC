{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\n'use strict';\n\nconst crypto = require('crypto');\n\nconst {\n  EventEmitter\n} = require('events');\n\nclass VolatileFile extends EventEmitter {\n  constructor(_ref) {\n    let {\n      filepath,\n      newFilename,\n      originalFilename,\n      mimetype,\n      hashAlgorithm,\n      createFileWriteStream\n    } = _ref;\n    super();\n    this.lastModifiedDate = null;\n    Object.assign(this, {\n      filepath,\n      newFilename,\n      originalFilename,\n      mimetype,\n      hashAlgorithm,\n      createFileWriteStream\n    });\n    this.size = 0;\n    this._writeStream = null;\n\n    if (typeof this.hashAlgorithm === 'string') {\n      this.hash = crypto.createHash(this.hashAlgorithm);\n    } else {\n      this.hash = null;\n    }\n  }\n\n  open() {\n    this._writeStream = this.createFileWriteStream(this);\n\n    this._writeStream.on('error', err => {\n      this.emit('error', err);\n    });\n  }\n\n  destroy() {\n    this._writeStream.destroy();\n  }\n\n  toJSON() {\n    const json = {\n      size: this.size,\n      newFilename: this.newFilename,\n      length: this.length,\n      originalFilename: this.originalFilename,\n      mimetype: this.mimetype\n    };\n\n    if (this.hash && this.hash !== '') {\n      json.hash = this.hash;\n    }\n\n    return json;\n  }\n\n  toString() {\n    return `VolatileFile: ${this.originalFilename}`;\n  }\n\n  write(buffer, cb) {\n    if (this.hash) {\n      this.hash.update(buffer);\n    }\n\n    if (this._writeStream.closed || this._writeStream.destroyed) {\n      cb();\n      return;\n    }\n\n    this._writeStream.write(buffer, () => {\n      this.size += buffer.length;\n      this.emit('progress', this.size);\n      cb();\n    });\n  }\n\n  end(cb) {\n    if (this.hash) {\n      this.hash = this.hash.digest('hex');\n    }\n\n    this._writeStream.end(() => {\n      this.emit('end');\n      cb();\n    });\n  }\n\n}\n\nmodule.exports = VolatileFile;","map":{"version":3,"names":["crypto","require","EventEmitter","VolatileFile","constructor","filepath","newFilename","originalFilename","mimetype","hashAlgorithm","createFileWriteStream","lastModifiedDate","Object","assign","size","_writeStream","hash","createHash","open","on","err","emit","destroy","toJSON","json","length","toString","write","buffer","cb","update","closed","destroyed","end","digest","module","exports"],"sources":["C:/Users/killua/local/pc/Bureau/SMQ-ROYAL-AIR-MAROC/client/node_modules/formidable/src/VolatileFile.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\nconst crypto = require('crypto');\nconst { EventEmitter } = require('events');\n\nclass VolatileFile extends EventEmitter {\n  constructor({ filepath, newFilename, originalFilename, mimetype, hashAlgorithm, createFileWriteStream }) {\n    super();\n\n    this.lastModifiedDate = null;\n    Object.assign(this, { filepath, newFilename, originalFilename, mimetype, hashAlgorithm, createFileWriteStream });\n\n    this.size = 0;\n    this._writeStream = null;\n\n    if (typeof this.hashAlgorithm === 'string') {\n      this.hash = crypto.createHash(this.hashAlgorithm);\n    } else {\n      this.hash = null;\n    }\n  }\n\n  open() {\n    this._writeStream = this.createFileWriteStream(this);\n    this._writeStream.on('error', (err) => {\n      this.emit('error', err);\n    });\n  }\n\n  destroy() {\n    this._writeStream.destroy();\n  }\n\n  toJSON() {\n    const json = {\n      size: this.size,\n      newFilename: this.newFilename,\n      length: this.length,\n      originalFilename: this.originalFilename,\n      mimetype: this.mimetype,\n    };\n    if (this.hash && this.hash !== '') {\n      json.hash = this.hash;\n    }\n    return json;\n  }\n\n  toString() {\n    return `VolatileFile: ${this.originalFilename}`;\n  }\n\n  write(buffer, cb) {\n    if (this.hash) {\n      this.hash.update(buffer);\n    }\n\n    if (this._writeStream.closed || this._writeStream.destroyed) {\n      cb();\n      return;\n    }\n\n    this._writeStream.write(buffer, () => {\n      this.size += buffer.length;\n      this.emit('progress', this.size);\n      cb();\n    });\n  }\n\n  end(cb) {\n    if (this.hash) {\n      this.hash = this.hash.digest('hex');\n    }\n    this._writeStream.end(() => {\n      this.emit('end');\n      cb();\n    });\n  }\n}\n\nmodule.exports = VolatileFile;\n"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAM;EAAEC;AAAF,IAAmBD,OAAO,CAAC,QAAD,CAAhC;;AAEA,MAAME,YAAN,SAA2BD,YAA3B,CAAwC;EACtCE,WAAW,OAA8F;IAAA,IAA7F;MAAEC,QAAF;MAAYC,WAAZ;MAAyBC,gBAAzB;MAA2CC,QAA3C;MAAqDC,aAArD;MAAoEC;IAApE,CAA6F;IACvG;IAEA,KAAKC,gBAAL,GAAwB,IAAxB;IACAC,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoB;MAAER,QAAF;MAAYC,WAAZ;MAAyBC,gBAAzB;MAA2CC,QAA3C;MAAqDC,aAArD;MAAoEC;IAApE,CAApB;IAEA,KAAKI,IAAL,GAAY,CAAZ;IACA,KAAKC,YAAL,GAAoB,IAApB;;IAEA,IAAI,OAAO,KAAKN,aAAZ,KAA8B,QAAlC,EAA4C;MAC1C,KAAKO,IAAL,GAAYhB,MAAM,CAACiB,UAAP,CAAkB,KAAKR,aAAvB,CAAZ;IACD,CAFD,MAEO;MACL,KAAKO,IAAL,GAAY,IAAZ;IACD;EACF;;EAEDE,IAAI,GAAG;IACL,KAAKH,YAAL,GAAoB,KAAKL,qBAAL,CAA2B,IAA3B,CAApB;;IACA,KAAKK,YAAL,CAAkBI,EAAlB,CAAqB,OAArB,EAA+BC,GAAD,IAAS;MACrC,KAAKC,IAAL,CAAU,OAAV,EAAmBD,GAAnB;IACD,CAFD;EAGD;;EAEDE,OAAO,GAAG;IACR,KAAKP,YAAL,CAAkBO,OAAlB;EACD;;EAEDC,MAAM,GAAG;IACP,MAAMC,IAAI,GAAG;MACXV,IAAI,EAAE,KAAKA,IADA;MAEXR,WAAW,EAAE,KAAKA,WAFP;MAGXmB,MAAM,EAAE,KAAKA,MAHF;MAIXlB,gBAAgB,EAAE,KAAKA,gBAJZ;MAKXC,QAAQ,EAAE,KAAKA;IALJ,CAAb;;IAOA,IAAI,KAAKQ,IAAL,IAAa,KAAKA,IAAL,KAAc,EAA/B,EAAmC;MACjCQ,IAAI,CAACR,IAAL,GAAY,KAAKA,IAAjB;IACD;;IACD,OAAOQ,IAAP;EACD;;EAEDE,QAAQ,GAAG;IACT,OAAQ,iBAAgB,KAAKnB,gBAAiB,EAA9C;EACD;;EAEDoB,KAAK,CAACC,MAAD,EAASC,EAAT,EAAa;IAChB,IAAI,KAAKb,IAAT,EAAe;MACb,KAAKA,IAAL,CAAUc,MAAV,CAAiBF,MAAjB;IACD;;IAED,IAAI,KAAKb,YAAL,CAAkBgB,MAAlB,IAA4B,KAAKhB,YAAL,CAAkBiB,SAAlD,EAA6D;MAC3DH,EAAE;MACF;IACD;;IAED,KAAKd,YAAL,CAAkBY,KAAlB,CAAwBC,MAAxB,EAAgC,MAAM;MACpC,KAAKd,IAAL,IAAac,MAAM,CAACH,MAApB;MACA,KAAKJ,IAAL,CAAU,UAAV,EAAsB,KAAKP,IAA3B;MACAe,EAAE;IACH,CAJD;EAKD;;EAEDI,GAAG,CAACJ,EAAD,EAAK;IACN,IAAI,KAAKb,IAAT,EAAe;MACb,KAAKA,IAAL,GAAY,KAAKA,IAAL,CAAUkB,MAAV,CAAiB,KAAjB,CAAZ;IACD;;IACD,KAAKnB,YAAL,CAAkBkB,GAAlB,CAAsB,MAAM;MAC1B,KAAKZ,IAAL,CAAU,KAAV;MACAQ,EAAE;IACH,CAHD;EAID;;AAvEqC;;AA0ExCM,MAAM,CAACC,OAAP,GAAiBjC,YAAjB"},"metadata":{},"sourceType":"script"}